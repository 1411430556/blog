import{_ as a,c as e,o as t,a8 as o}from"./chunks/framework.G9cCL05C.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"notes/uniapp/waterMarks.md","filePath":"notes/uniapp/waterMarks.md","lastUpdated":1749002053000}'),s={name:"notes/uniapp/waterMarks.md"},r=o('<h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h2><p>最近接了一个需求是这样的：用户在企业微信中上传图片时，在图片上加上时间、地点等水印，然后上传到服务器。</p><p>本来以为是个挺简单的需求，但是实际做下来，发现还是有不少坑，（吐槽下： <code>uniapp</code> 的坑够多了，再加上企业微信，简直是大坑巨坑），做这个需求前前后后花了不少时间精力，值得在这里总结下。</p><h2 id="图片加水印" tabindex="-1">图片加水印 <a class="header-anchor" href="#图片加水印" aria-label="Permalink to &quot;图片加水印&quot;">​</a></h2><p>首先第一步要做到在图片上加水印，加的内容再说，先保证图片上有水印。</p><p>这块的逻辑还是挺简单的，主要的逻辑是：</p><h3 id="坑-1-uni-canvastotempfilepath-接口调用成-success-函数调用成功-功但是报-errmsg-canvastotempfilepath-ok" tabindex="-1">坑 1： uni.canvasToTempFilePath 接口调用成，success 函数调用成功 功但是报 errMsg: &quot;canvasToTempFilePath:ok&quot; <a class="header-anchor" href="#坑-1-uni-canvastotempfilepath-接口调用成-success-函数调用成功-功但是报-errmsg-canvastotempfilepath-ok" aria-label="Permalink to &quot;坑 1： uni.canvasToTempFilePath 接口调用成，success 函数调用成功 功但是报 errMsg: &quot;canvasToTempFilePath:ok&quot;&quot;">​</a></h3><p>canvasToTempFilePath 接口调用成功，但是没有返回 tempFilePath</p><h3 id="坑-2-加完水印图片上传不上去-缺少文件名" tabindex="-1">坑 2： 加完水印图片上传不上去，缺少文件名 <a class="header-anchor" href="#坑-2-加完水印图片上传不上去-缺少文件名" aria-label="Permalink to &quot;坑 2： 加完水印图片上传不上去，缺少文件名&quot;">​</a></h3><p>使用 image-tools 的 base64ToPath 方法将 base64 编码图片转化为临时地址后，uploadFile 上传不上去问题</p><p>base64ToPath 之后文件名丢失</p><p>uni.uploadFIle 上传的文件名为什么是默认的 file-xxxx</p><p>传递 filePath 改成 直接传 file</p><h2 id="获取地址-并将地址字符串作为水印加到图片上" tabindex="-1">获取地址，并将地址字符串作为水印加到图片上 <a class="header-anchor" href="#获取地址-并将地址字符串作为水印加到图片上" aria-label="Permalink to &quot;获取地址，并将地址字符串作为水印加到图片上&quot;">​</a></h2><h3 id="坑-1" tabindex="-1">坑 1： <a class="header-anchor" href="#坑-1" aria-label="Permalink to &quot;坑 1：&quot;">​</a></h3>',15),i=[r];function n(p,l,c,h,d,u){return t(),e("div",null,i)}const f=a(s,[["render",n]]);export{_ as __pageData,f as default};
